"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[54267],{64633:(e,t,o)=>{o.r(t),o.d(t,{data:()=>d});const d={key:"v-2e80f4bc",path:"/devices/ZM-AM02.html",title:"Zemismart ZM-AM02 control via MQTT",lang:"en-US",frontmatter:{title:"Zemismart ZM-AM02 control via MQTT",description:"Integrate your Zemismart ZM-AM02 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendors bridge or gateway.",addedAt:"2022-01-31T17:42:44.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Motor_working_mode (enum)",slug:"motor-working-mode-enum",children:[]},{level:3,title:"Control (enum)",slug:"control-enum",children:[]},{level:3,title:"Percent_state (numeric)",slug:"percent-state-numeric",children:[]},{level:3,title:"Mode (enum)",slug:"mode-enum",children:[]},{level:3,title:"Control_back_mode (enum)",slug:"control-back-mode-enum",children:[]},{level:3,title:"Border (enum)",slug:"border-enum",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/ZM-AM02.md",git:{updatedTime:1644940737e3}}},54518:(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});const d=(0,o(66252).uE)('<h1 id="zemismart-zm-am02" tabindex="-1"><a class="header-anchor" href="#zemismart-zm-am02" aria-hidden="true">#</a> Zemismart ZM-AM02</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>ZM-AM02</td></tr><tr><td>Vendor</td><td>Zemismart</td></tr><tr><td>Description</td><td>Zigbee/RF curtain converter</td></tr><tr><td>Exposes</td><td>motor_working_mode, control, percent_state, mode, control_back_mode, border, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/ZM-AM02.jpg" alt="Zemismart ZM-AM02"></td></tr></tbody></table><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="motor-working-mode-enum" tabindex="-1"><a class="header-anchor" href="#motor-working-mode-enum" aria-hidden="true">#</a> Motor_working_mode (enum)</h3><p>Value can be found in the published state on the <code>motor_working_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;motor_working_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>continuous</code>, <code>intermittently</code>.</p><h3 id="control-enum" tabindex="-1"><a class="header-anchor" href="#control-enum" aria-hidden="true">#</a> Control (enum)</h3><p>Value can be found in the published state on the <code>control</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;control&quot;: NEW_VALUE}</code>. The possible values are: <code>open</code>, <code>stop</code>, <code>close</code>, <code>continue</code>.</p><h3 id="percent-state-numeric" tabindex="-1"><a class="header-anchor" href="#percent-state-numeric" aria-hidden="true">#</a> Percent_state (numeric)</h3><p>Value can be found in the published state on the <code>percent_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="mode-enum" tabindex="-1"><a class="header-anchor" href="#mode-enum" aria-hidden="true">#</a> Mode (enum)</h3><p>Value can be found in the published state on the <code>mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;mode&quot;: NEW_VALUE}</code>. The possible values are: <code>morning</code>, <code>night</code>.</p><h3 id="control-back-mode-enum" tabindex="-1"><a class="header-anchor" href="#control-back-mode-enum" aria-hidden="true">#</a> Control_back_mode (enum)</h3><p>Value can be found in the published state on the <code>control_back_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;control_back_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>forward</code>, <code>back</code>.</p><h3 id="border-enum" tabindex="-1"><a class="header-anchor" href="#border-enum" aria-hidden="true">#</a> Border (enum)</h3><p>Value can be found in the published state on the <code>border</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;border&quot;: NEW_VALUE}</code>. The possible values are: <code>up</code>, <code>down</code>, <code>down_delete</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',17),a={},r=(0,o(83744).Z)(a,[["render",function(e,t){return d}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[o,d]of t)e[o]=d;return e}}}]);